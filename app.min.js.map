{"version":3,"sources":["../src-es6/timeline/TimeLineApp.es6"],"names":["_classCallCheck","instance","Constructor","TypeError","value","DateUtils","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","refDate","Date","resourceServer","ConfigValues","./lib/utils/Date.es6","wrapper","require","module","exports","EventCallback","callback","eventsManager","this","setCallback","toolBox","createTool","getToolByName","call","apply","createButtons","tmp","itGroup","addLine","weight","context","arguments","undefined","enabled","mousemove","arg","line","date","timeLine","getDateFromTile","mouseup","overlapping","name","sameProjectOverlapping","callbacks","setEnabled","CustomEvent","self","overlapResolver","refSlice","renderer","eventCallback","timeSlices","refresh","index","findIndex","b","attachButton","timeline","TimeLineApp","document","getElementById"],"mappings":";;qdAEA,SAAAA,GAAAC,EAAAC,GAAA,KAAAD,YAAAC,IAAA,KAAA,IAAAC,WAAA,2EAFAC,OAAA,MAAYC,aACZ,IAAAC,GAAA,WAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAA,GAAAC,GAAA,EAAAA,EAAAD,EAAAE,OAAAD,IAAA,CAAA,GAAAE,GAAAH,EAAAC,EAAAE,GAAAC,WAAAD,EAAAC,aAAA,EAAAD,EAAAE,cAAA,EAAA,SAAAF,KAAAA,EAAAG,UAAA,GAAAC,OAAAC,eAAAT,EAAAI,EAAAM,IAAAN,IAAA,MAAA,UAAAV,EAAAiB,EAAAC,GAAA,MAAAD,IAAAZ,EAAAL,EAAAmB,UAAAF,GAAAC,GAAAb,EAAAL,EAAAkB,GAAAlB,qFAEAoB,QAAA,GAAAC,4CACAC,eAAA,8BACA,QAAAC,2GAEAnB,GAAAmB,sIAIIC,uBAAaC,IAAAA,GAAb,SAAAC,EAA+BC,EAAAC,GAAA,YAO3B,SAAA9B,GAAgBC,EAAAC,GAAayB,KAASL,YAAtCpB,IAAA,KAAA,IAAAC,WAAA,qCANAa,OAAAC,eAAAa,EAAA,cACA1B,OAAA,0QAQA,QAAA2B,GAAAC,EAAiBC,+BAIjBC,KAAAC,YAAAH,kCAKJd,IAAA,iHAEIA,IAAA,cAAAd,MAAA,SAEoBgC,GAFpB,KAGIC,GAAaL,EAAKI,aAAQE,EAAcC,MAH5CP,EAAAQ,OAIIC,KAAAA,0CAJJP,MAMOQ,SANPV,KAAAd,IAAA,YAAAd,MAAA,yEAaAuC,MAAAA,OAAQC,SAAQC,EAAhB,OAGI3B,IAAA,OACId,MAAA,WACH,GAAA0C,GAAAC,UAAApC,OAAA,OAAAqC,KAAAD,UAAA,GAAAA,UAAA,GAAAb,mBAGDQ,IAAAA,KAAMO,QAKN,MADJZ,GAAAA,MAAWa,QAAXC,GAAuBA,GAAUC,GAC7BlB,KAAImB,SAAYC,MAAAA,EAASC,yBAQ7BlB,QAAAA,GAAWmB,GACPxD,EAAIyD,KAAAA,GAAgCvB,KAAAwB,KAApCA,EAAAxB,KAAAe,SACIU,EAA4CzB,KAAA0B,aAAA1B,KAAA2B,mBAG5CvD,GAAAwD,IACIL,IAAAA,aACIrD,MAAA,WACI2D,GAAAA,KAAAA,UAAAA,OAAKC,OAAwBC,KAAxBD,UAAL,KAAAjB,UAAA,EAEAL,MAAAA,QAAAA,uBAIRqB,MAAAA,SAAKG,GACR,GAAAC,GAAA,GAAApC,GAAAC,EAED+B,+BAAAA,KAGAK,IAAAA,iBACAL,MAAAA,SAAcM,GACjB,GAAAC,GAAApC,KAAA0B,UAAAW,UAAA,SAAAvC,GAtBL,MAAAA,KAAAmC,GA0BAG,IAAYE,GACRT,KAAK3B,UAAQqC,OAAAA,EAAahC,MAI1BsB,IAAAA,OACH3D,MAAA,WACJ,GAAA0C,GAAAC,UAAApC,OAAA,OAAAqC,KAAAD,UAAA,GAAAA,UAAA,GAAAb,uFAGDwC,KAAWd,UAAIe,QAAYC,SAASC","file":"app.min.js","sourcesContent":["import * as DateUtils from '../lib/utils/Date';\nimport EventsManager from '../lib/EventsManager';\nimport OverlapResolver from './OverlapResolver';\nimport TimeLine from './TimeLine';\nimport TimeLineRenderer from './TimeLineRenderer';\nimport TimeLineToolbox from './TimeLineToolbox';\nimport ProjectFactory from './data/Project';\nimport TimeSliceFactory from './data/TimeSlice';\nimport MouseStateListener from '../lib/MouseStateListener';\n\nclass TimeLineApp {\n    constructor (wrapper, refDate) {\n        this.wrapper = wrapper;\n        this.refDate = refDate;\n\n        this.eventManager = new EventsManager({private: true});\n\n        this.overlapResolver = new OverlapResolver(this.eventManager);\n        this.timeLine = new TimeLine(wrapper, refDate);\n        this.renderer = new TimeLineRenderer(wrapper, refDate);\n\n        TimeSliceFactory.eventsManager = this.eventManager;\n\n        this.toolBox = new TimeLineToolbox(this.timeLine, new MouseStateListener(document.querySelector('html')));\n\n        // add a data manager which will manage the loading and rendering of the timelines\n\n        this.init();\n    }\n\n    // temp\n    init() {\n        let self = this,\n            itGroup = this.timeLine.addGroup('it'),\n            moveTool = this.toolBox.createTool('move'),\n            createTool = this.toolBox.getToolByName('create'),\n            createButtons = document.querySelectorAll('[data-tool=create]'),\n            moveButtons = document.querySelectorAll('[data-tool=move]'),\n            b, tmp,\n            playandgold = ProjectFactory.create('Play&Gold', '#FC0'),\n            antargaz = ProjectFactory.create('Antargaz', '#0F0'),\n            currentProject = playandgold,\n            timeSlices = [];\n\n        itGroup.addLine('Julien');\n        itGroup.addLine('Brieuc');\n\n        createTool.mousedown = function (line, tile) {\n            if (line === undefined) {\n                return;\n            }\n\n            var date = self.timeLine.getDateFromTile(tile);\n            tmp = TimeSliceFactory.create(currentProject, line.user, date, date);\n            self.renderer.addSlice(tmp, line);\n        };\n\n        createTool.mousemove = function (line, tile) {\n            var date = self.timeLine.getDateFromTile(tile);\n            if (date >= tmp.startDate) {\n                tmp.endDate = date;\n            }\n\n            self.renderer.refresh();\n        };\n\n        createTool.mouseup = function (line, tile) {\n            var overlapping = timeSlices.filter(timeSlice => timeSlice.user === tmp.user && OverlapResolver.isOverlapping(timeSlice, tmp)),\n                sameProjectOverlapping = overlapping.filter(timeSlice => timeSlice.project === tmp.project);\n\n            if (overlapping.length > 0) {\n                if (overlapping.length === sameProjectOverlapping.length) {\n                    overlapping.forEach(refSlice => {\n                        if (tmp.project === refSlice.project) {\n                            self.overlapResolver.resolve(refSlice, tmp);\n                            tmp.startDate = refSlice.startDate;\n                            tmp.endDate = refSlice.endDate;\n                        }\n                    });\n\n                    self.renderer.refresh();\n                }\n\n                self.renderer.removeSlice(tmp);\n                tmp = null;\n            } else {\n                timeSlices.push(tmp);\n                self.renderer.refresh();\n            }\n\n        };\n\n        for (b = 0; b < createButtons.length; b += 1) {\n            self.toolBox.attachButton(createButtons[b], createTool);\n        }\n\n        for (b = 0; b < moveButtons.length; b += 1) {\n            self.toolBox.attachButton(moveButtons[b], moveTool);\n        }\n    }\n}\n\nlet timeline = new TimeLineApp(document.getElementById('timeline'), DateUtils.toMidnight(new Date()));"]}