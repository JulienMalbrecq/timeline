{"version":3,"sources":["../src-es6/timeline/TimeLineApp.es6"],"names":["value","EventCallback","callback","weight","this","setCallback","_createClass","key","TimeLineApp","arg","arguments","eventManager","CustomEvent","toolBox","_classCallCheck","init","name","enabled","setEnabled","self","length","undefined","moveTool","tmp","playandgold","eventCallback","antargaz","itGroup","addLine","callbacks","findIndex","index","line","splice","context","timeLine","getDateFromTile","date","startDate","forEach","EventsManager","sameProjectOverlapping","config","overlapping","private","renderer","refresh","instance","eventName","b","createButtons","moveButtons"],"mappings":";;0lBAAAA,OAAA,0QAEA,QAAAC,GAAAC,EAAAC,+BACAC,KAAAC,YAAAH,2BACAI,GAAAL,yHAEAM,IAAA,qSAIMC,kEACFC,EAAAC,UAAA,yBAIID,GAAKE,MAAAA,QAAeF,GAAAA,GAAAA,qCAQpBG,EAAKC,yBAELC,EAAAV,KAAAQ,GAEAR,KAAKW,KAALC,EACHZ,KAAAa,SAAA,oBAEDb,KAAAc,aAqCQ,+CAnCJ,GAAIC,KAAOT,UAAXU,OAAA,OAAAC,KAAAX,UAAA,KAAAA,UAAA,EAAAN,MAEIkB,QAAWL,KAFfV,IAAA,cAAAP,MAAA,SAAAE,GAAA,GAMOqB,GANP,GAAAtB,GAAAC,EAAA,OAAAE,MAOIoB,UAAAA,KAAcC,GACdC,0BAIJC,MAAAA,SAAAF,GACAE,GAAAA,GAAQC,KAAQC,UAAhBC,UAAA,SAAA5B,iBAGI6B,IAAIC,GACA5B,KAAAyB,UAAAI,OAAAF,EAAA,MAIJR,IAAAA,OACAJ,MAAAA,WACH,GARDe,GAAAxB,UAAAU,OAAA,OAAAC,KAAAX,UAAA,GAAAA,UAAA,GAAAN,mBAWIA,MAAAyB,UAAWV,KAAKgB,SAASC,EAAAA,GACzB,MAAIC,GAAAA,QAAYC,EAAAA,OAAW,GAAA,IAE1BlC,KAAAyB,UAAAU,QAAA,SAAArC,4BAMDU,KAAA4B,EACIC,WAA4C,QAAAD,KAAA,GAAAE,GADhDhC,UAAAU,OAAA,OAAAC,KAAAX,UAAA,GAAAA,UAAA,KAWS,IARTI,EAAI6B,KAAAA,GAGQvC,KAAAwC,SAAA,EACIzB,KAAAA,UAEAI,OAAAA,OAAAA,KAAAA,IAEP,IAAAnB,KANDwC,QAWJzB,6BAHIA,EAAK0B,SAASC,MAGlB3B,EAAA4B,eAIA5B,GAAAA,IACHZ,IAAA,OAEJP,MAxBD,SAAAgD,EAAA9C,GA8BA,OAJA,IAAY+C,KAAIC,SAAAA,KACZ/B,KAAKN,OAALmC,GAAA,GAA0BE,GAAAF,IAGzBC,KAAOA,OAAIE,GAAY/B,YAA5BlB,MAGHK,IAAA","file":"app.min.js","sourcesContent":["import * as DateUtils from '../lib/utils/Date';\nimport EventsManager from '../lib/EventsManager';\nimport OverlapResolver from './OverlapResolver';\nimport TimeLine from './TimeLine';\nimport TimeLineRenderer from './TimeLineRenderer';\nimport TimeLineToolbox from './TimeLineToolbox';\nimport ProjectFactory from './data/Project';\nimport TimeSliceFactory from './data/TimeSlice';\nimport MouseStateListener from '../lib/MouseStateListener';\n\nclass TimeLineApp {\n    constructor (wrapper, refDate) {\n        this.wrapper = wrapper;\n        this.refDate = refDate;\n\n        this.eventManager = new EventsManager({private: true});\n\n        this.overlapResolver = new OverlapResolver(this.eventManager);\n        this.timeLine = new TimeLine(wrapper, refDate);\n        this.renderer = new TimeLineRenderer(wrapper, refDate);\n\n        TimeSliceFactory.eventsManager = this.eventManager;\n\n        this.toolBox = new TimeLineToolbox(this.timeLine, new MouseStateListener(document.querySelector('html')));\n\n        // add a data manager which will manage the loading and rendering of the timelines\n\n        this.init();\n    }\n\n    // temp\n    init() {\n        let self = this,\n            itGroup = this.timeLine.addGroup('it'),\n            moveTool = this.toolBox.createTool('move'),\n            createTool = this.toolBox.getToolByName('create'),\n            createButtons = document.querySelectorAll('[data-tool=create]'),\n            moveButtons = document.querySelectorAll('[data-tool=move]'),\n            b, tmp,\n            playandgold = ProjectFactory.create('Play&Gold', '#FC0'),\n            antargaz = ProjectFactory.create('Antargaz', '#0F0'),\n            currentProject = playandgold,\n            timeSlices = [];\n\n        itGroup.addLine('Julien');\n        itGroup.addLine('Brieuc');\n\n        createTool.mousedown = function (line, tile) {\n            if (line === undefined) {\n                return;\n            }\n\n            var date = self.timeLine.getDateFromTile(tile);\n            tmp = TimeSliceFactory.create(currentProject, line.user, date, date);\n            self.renderer.addSlice(tmp, line);\n        };\n\n        createTool.mousemove = function (line, tile) {\n            var date = self.timeLine.getDateFromTile(tile);\n            if (date >= tmp.startDate) {\n                tmp.endDate = date;\n            }\n\n            self.renderer.refresh();\n        };\n\n        createTool.mouseup = function (line, tile) {\n            var overlapping = timeSlices.filter(timeSlice => timeSlice.user === tmp.user && OverlapResolver.isOverlapping(timeSlice, tmp)),\n                sameProjectOverlapping = overlapping.filter(timeSlice => timeSlice.project === tmp.project);\n\n            if (overlapping.length > 0) {\n                if (overlapping.length === sameProjectOverlapping.length) {\n                    overlapping.forEach(refSlice => {\n                        if (tmp.project === refSlice.project) {\n                            self.overlapResolver.resolve(refSlice, tmp);\n                            tmp.startDate = refSlice.startDate;\n                            tmp.endDate = refSlice.endDate;\n                        }\n                    });\n\n                    self.renderer.refresh();\n                }\n\n                self.renderer.removeSlice(tmp);\n                tmp = null;\n            } else {\n                timeSlices.push(tmp);\n                self.renderer.refresh();\n            }\n\n        };\n\n        for (b = 0; b < createButtons.length; b += 1) {\n            self.toolBox.attachButton(createButtons[b], createTool);\n        }\n\n        for (b = 0; b < moveButtons.length; b += 1) {\n            self.toolBox.attachButton(moveButtons[b], moveTool);\n        }\n    }\n}\n\nlet timeline = new TimeLineApp(document.getElementById('timeline'), DateUtils.toMidnight(new Date()));"]}