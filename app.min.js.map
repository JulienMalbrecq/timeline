{"version":3,"sources":["../src-es6/timeline/TimeLineApp.es6"],"names":["_classCallCheck","instance","Constructor","TypeError","value","DateUtils","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","refDate","Date","config","arguments","undefined","assign","this","set","date","overlapResolver","eventManager","private","EventCallback","renderer","eventsManager","toolBox","setWeight","weight","timeLine","moveTool","callback","constructor","call","apply","createTool","b","timeSlices","itGroup","addLine","context","arg","mousemove","line","CustomEvent","mouseup","name","enabled","callbacks","setEnabled","overlapping","project","refSlice","tmp","self","push","eventCallback","refresh","createButtons","TimeLineApp","document","getElementById"],"mappings":"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","file":"app.min.js","sourcesContent":["import * as DateUtils from '../lib/utils/Date';\nimport EventsManager from '../lib/EventsManager';\nimport OverlapResolver from './OverlapResolver';\nimport TimeLine from './TimeLine';\nimport TimeLineRenderer from './TimeLineRenderer';\nimport TimeLineToolbox from './TimeLineToolbox';\nimport ProjectFactory from './data/Project';\nimport TimeSliceFactory from './data/TimeSlice';\nimport MouseStateListener from '../lib/MouseStateListener';\n\nclass TimeLineApp {\n    constructor (wrapper, refDate) {\n        this.wrapper = wrapper;\n        this.refDate = refDate;\n\n        this.eventManager = new EventsManager({private: true});\n\n        this.overlapResolver = new OverlapResolver(this.eventManager);\n        this.timeLine = new TimeLine(wrapper, refDate);\n        this.renderer = new TimeLineRenderer(wrapper, refDate);\n\n        TimeSliceFactory.eventsManager = this.eventManager;\n\n        this.toolBox = new TimeLineToolbox(this.timeLine, new MouseStateListener(document.querySelector('html')));\n\n        // add a data manager which will manage the loading and rendering of the timelines\n\n        this.init();\n    }\n\n    // temp\n    init() {\n        let self = this,\n            itGroup = this.timeLine.addGroup('it'),\n            moveTool = this.toolBox.createTool('move'),\n            createTool = this.toolBox.getToolByName('create'),\n            createButtons = document.querySelectorAll('[data-tool=create]'),\n            moveButtons = document.querySelectorAll('[data-tool=move]'),\n            b, tmp,\n            playandgold = ProjectFactory.create('Play&Gold', '#FC0'),\n            antargaz = ProjectFactory.create('Antargaz', '#0F0'),\n            currentProject = playandgold,\n            timeSlices = [];\n\n        itGroup.addLine('Julien');\n        itGroup.addLine('Brieuc');\n\n        createTool.mousedown = function (line, tile) {\n            if (line === undefined) {\n                return;\n            }\n\n            var date = self.timeLine.getDateFromTile(tile);\n            tmp = TimeSliceFactory.create(currentProject, line.user, date, date);\n            self.renderer.addSlice(tmp, line);\n        };\n\n        createTool.mousemove = function (line, tile) {\n            var date = self.timeLine.getDateFromTile(tile);\n            if (date >= tmp.startDate) {\n                tmp.endDate = date;\n            }\n\n            self.renderer.refresh();\n        };\n\n        createTool.mouseup = function (line, tile) {\n            var overlapping = timeSlices.filter(timeSlice => timeSlice.user === tmp.user && OverlapResolver.isOverlapping(timeSlice, tmp)),\n                sameProjectOverlapping = overlapping.filter(timeSlice => timeSlice.project === tmp.project);\n\n            if (overlapping.length > 0) {\n                if (overlapping.length === sameProjectOverlapping.length) {\n                    overlapping.forEach(refSlice => {\n                        if (tmp.project === refSlice.project) {\n                            self.overlapResolver.resolve(refSlice, tmp);\n                            tmp.startDate = refSlice.startDate;\n                            tmp.endDate = refSlice.endDate;\n                        }\n                    });\n\n                    self.renderer.refresh();\n                }\n\n                self.renderer.removeSlice(tmp);\n                tmp = null;\n            } else {\n                timeSlices.push(tmp);\n                self.renderer.refresh();\n            }\n\n        };\n\n        for (b = 0; b < createButtons.length; b += 1) {\n            self.toolBox.attachButton(createButtons[b], createTool);\n        }\n\n        for (b = 0; b < moveButtons.length; b += 1) {\n            self.toolBox.attachButton(moveButtons[b], moveTool);\n        }\n    }\n}\n\nlet timeline = new TimeLineApp(document.getElementById('timeline'), DateUtils.toMidnight(new Date()));"]}