{"version":3,"sources":["../src-es6/timeline/TimeLineApp.es6"],"names":["DateUtils","baseURL","base","path","query","transport","using","fermata","_makeNativeURL","url","lastArg","data","args","pop","options","headers","callback","wrapper","_extend","refDate","concat","_wrapTheWrapper","impl","enumerate","fix","get","target","name","getPropertyNames","itGroup","timeLine","defineProperty","moveTool","createTool","delete","toolBox","b","tmp","Proxy","currentProject","playandgold","timeSlices","mousedown","line","tile","arguments","put","undefined","apply","post","_nodeTransport","request","mousemove","parse","url_parts","auth","mouseup","overlapping","filter","Buffer","toString","timeSlice","project","forEach","warn","overlapResolver","self","startDate","refSlice","refresh","require","opts","node","pathname","search","agent","http","globalAgent","_isStream","createButtons","req","end","setHeader"],"mappings":";;yHAAYA,QAAAA,mCACZ,GAAAC,IAAAC,KAAA,GAAAC,MAAA,IAAAC,sRAGAC,GAAAC,MAAA,mGAEAC,QAAAC,eAAA,SAAAH,EAAAI,6GACA,IAAA,cAAAC,mEACAC,EAAAC,EAAAC,8VAGIC,QAAAA,EAAAC,QAAAA,EAA+BJ,KAAAA,GAAAK,GAC3B,GAAKC,GAAL,WAAeA,EAAfV,QAAAW,WAAAT,EAAAL,MAAAQ,EAAAC,OAAAJ,EAAAL,MACKe,EAAUA,EAAf,OAAAV,EAAAN,KAAAiB,OAAAR,GAAAH,EAAAN,sEAMAI,QAAAc,gBAAgB,SAAAC,uGAIhBC,UAAA,WAAe,sCAEfC,IAAA,mCAGHC,IAAA,SAAAC,EAAAC,mIAGM,SAAAA,KACHC,iBAAA,WAAA,UAAAL,UACIM,WAAeC,UADnBC,eAEIC,WAAwBC,OAAAA,GAF5BC,OAGID,WAAa,OAAKE,GAHtBX,IAAA,aAAAC,IAAA,SAMIW,EANJT,GAAA,MAMOU,GAAAA,KANPf,GAAAgB,MASIC,GAAAA,OAAiBC,GATrBf,IAAA,SAUIgB,EAVJd,qCAeAM,IAAAA,WAAWS,MAAYpB,GAAA,OAAUqB,MAAMC,KAAMC,YACzCC,IAAA,WAAaC,MAAAA,GAAW,OAAAC,MAAA,KAAAH,YACpBI,KAAA,WAAA,MAAA3B,GAAA,QAAA0B,MAAA,KAAAH,YACHX,OAAA,WAAA,MAAAZ,GAAA,UAAA0B,MAAA,KAAAH,qEAKJtC,QAAA2C,eARD,SAAAC,EAAAnC,kCAUAiB,EAAAA,QAAWmB,OAAYC,MAAA5C,GACnBM,6DAMHuC,EAPDC,OAS2C,cAA3CtB,QAAAA,OAAWuB,MAAU,6BAAsBD,OACvCD,EAAIG,KAAAA,mBAAyBC,EAAOH,OAAAxC,EAApC,cAAA,SAAA,GAAA4C,QAAAL,EAAAC,MAAAK,SAAA,WACgDrD,QAAAW,QAAAH,EAAa8C,EAAUC,sDAI/DL,SAAAA,QAAAA,MAAYM,QAAQC,KAAA,gDAChBb,EAAAxC,KAAA,MACSsD,gBAALC,GAAAA,OACA7B,EAAAA,KAAAA,GAAAA,QAAAA,EAAI8B,KAAYC,QAEnBrD,EAAA,kBAAAA,EAAA,gBAAA,4BAGLmD,IAAAA,GAAcG,WAAdH,EAAAA,SAAAI,QAAA,SAAAA,QAAA,QACHC,EAAAhE,QAAAW,WAAAiC,EAAArC,QAAA0D,sBAEDN,KAAAA,EAAAA,KACA7B,OAAAA,EAAAA,OACHlC,KAAAmD,EAAMmB,UAAAnB,EAAAoB,QAAA,IACHjC,QAAAA,EAEHkC,MAAAxB,EAAArC,QAAA0D,MAAArB,EAAArC,QAAA0D,KAAAG,OAAAC,EAAAC,mCAILtE,SAAAuE,UAAY1C,EAAI2C,MACZb,EAAAA,KAAK/B,KAAAA,GACRgB,EAAAxC,kDAEDqE,EAAAC,IAAA9B,EAAYf,QAEX4C,EAAAE,UAAA,iBAAA,GACJF,EAAAC","file":"lib.min.js","sourcesContent":["import * as DateUtils from '../lib/utils/Date';\nimport EventsManager from '../lib/EventsManager';\nimport OverlapResolver from './OverlapResolver';\nimport TimeLine from './TimeLine';\nimport TimeLineRenderer from './TimeLineRenderer';\nimport TimeLineToolbox from './TimeLineToolbox';\nimport ProjectFactory from './data/Project';\nimport TimeSliceFactory from './data/TimeSlice';\nimport MouseStateListener from '../lib/MouseStateListener';\n\nclass TimeLineApp {\n    constructor (wrapper, refDate) {\n        this.wrapper = wrapper;\n        this.refDate = refDate;\n\n        this.eventManager = new EventsManager({private: true});\n\n        this.overlapResolver = new OverlapResolver(this.eventManager);\n        this.timeLine = new TimeLine(wrapper, refDate);\n        this.renderer = new TimeLineRenderer(wrapper, refDate);\n\n        TimeSliceFactory.eventsManager = this.eventManager;\n\n        this.toolBox = new TimeLineToolbox(this.timeLine, new MouseStateListener(document.querySelector('html')));\n\n        // add a data manager which will manage the loading and rendering of the timelines\n\n        this.init();\n    }\n\n    // temp\n    init() {\n        let self = this,\n            itGroup = this.timeLine.addGroup('it'),\n            moveTool = this.toolBox.createTool('move'),\n            createTool = this.toolBox.getToolByName('create'),\n            createButtons = document.querySelectorAll('[data-tool=create]'),\n            moveButtons = document.querySelectorAll('[data-tool=move]'),\n            b, tmp,\n            playandgold = ProjectFactory.create('Play&Gold', '#FC0'),\n            antargaz = ProjectFactory.create('Antargaz', '#0F0'),\n            currentProject = playandgold,\n            timeSlices = [];\n\n        itGroup.addLine('Julien');\n        itGroup.addLine('Brieuc');\n\n        createTool.mousedown = function (line, tile) {\n            if (line === undefined) {\n                return;\n            }\n\n            var date = self.timeLine.getDateFromTile(tile);\n            tmp = TimeSliceFactory.create(currentProject, line.user, date, date);\n            self.renderer.addSlice(tmp, line);\n        };\n\n        createTool.mousemove = function (line, tile) {\n            var date = self.timeLine.getDateFromTile(tile);\n            if (date >= tmp.startDate) {\n                tmp.endDate = date;\n            }\n\n            self.renderer.refresh();\n        };\n\n        createTool.mouseup = function (line, tile) {\n            var overlapping = timeSlices.filter(timeSlice => timeSlice.user === tmp.user && OverlapResolver.isOverlapping(timeSlice, tmp)),\n                sameProjectOverlapping = overlapping.filter(timeSlice => timeSlice.project === tmp.project);\n\n            if (overlapping.length > 0) {\n                if (overlapping.length === sameProjectOverlapping.length) {\n                    overlapping.forEach(refSlice => {\n                        if (tmp.project === refSlice.project) {\n                            self.overlapResolver.resolve(refSlice, tmp);\n                            tmp.startDate = refSlice.startDate;\n                            tmp.endDate = refSlice.endDate;\n                        }\n                    });\n\n                    self.renderer.refresh();\n                }\n\n                self.renderer.removeSlice(tmp);\n                tmp = null;\n            } else {\n                timeSlices.push(tmp);\n                self.renderer.refresh();\n            }\n\n        };\n\n        for (b = 0; b < createButtons.length; b += 1) {\n            self.toolBox.attachButton(createButtons[b], createTool);\n        }\n\n        for (b = 0; b < moveButtons.length; b += 1) {\n            self.toolBox.attachButton(moveButtons[b], moveTool);\n        }\n    }\n}\n\nlet timeline = new TimeLineApp(document.getElementById('timeline'), DateUtils.toMidnight(new Date()));"]}